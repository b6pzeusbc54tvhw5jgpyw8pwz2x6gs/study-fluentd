<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<filter httpd.access>
  @type parser
  format apache2
  key_name log
</filter>

<filter access.apache>
  @type geoip

  # Specify one or more geoip lookup field which has ip address (default: host)
  geoip_lookup_keys  host

  # Specify optional geoip database (using bundled GeoLiteCity databse by default)
  # geoip_database    "/path/to/your/GeoIPCity.dat"
  # Specify optional geoip2 database (using bundled GeoLite2 database by default)
  # geoip2_database   "/path/to/your/GeoLite2-City.mmdb"
  # Specify backend library (geoip2_c, geoip, geoip2_compat)
  backend_library geoip2_c

  enable_ruby true
  output_field geoip

  # Set adding field with placeholder (more than one settings are required.)
  <record>
    city            ${city.names.en["host"]}
    latitude        ${location.latitude["host"]}
    longitude       ${location.longitude["host"]}
    country         ${country.iso_code["host"]}
    country_name    ${country.names.en["host"]}
    postal_code     ${postal.code["host"]}
    region_code     ${subdivisions.0.iso_code["host"]}
    region_name     ${subdivisions.0.names.en["host"]}
  </record>

  # To avoid get stacktrace error with `[null, null]` array for elasticsearch.
  skip_adding_null_record  true
</filter>


<match **>
  @type route
  add_tag_prefix log

  <route **>
    copy # For fall-through. Without copy, routing is stopped here.
    @label @TO_STDOUT
  </route>
  <route **>
    copy
    @label @TO_ELASTICSEARCH
  </route>
</match>

<label @TO_STDOUT>
  <match log.**>
    @type stdout
  </match>
</label>

<label @TO_ELASTICSEARCH>

  <match log.**>
    @type elasticsearch
    host elasticsearch
    port 9200

    index_name elastic.%Y%m%d
    include_tag_key true
    time_key @timestamp
    include_timestamp true

    <buffer tag, time>
      @type memory
      timekey 60m
      timekey_wait 1m
      flush_mode interval
      flush_interval 5
    </buffer>

  </match>
</label>
